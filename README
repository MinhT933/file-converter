# 🧠 Golang Service - Server & Worker

![Go Version](https://img.shields.io/badge/Go-1.20%2B-blue)
![License](https://img.shields.io/badge/License-MIT-green)
![Docker Support](https://img.shields.io/badge/Docker-Supported-blue)

This is a monorepo Go service with two main components:

- 🌐 `cmd/server`: the HTTP/WebSocket server  
- ⚙️ `cmd/worker`: the background job processor (e.g., consuming from queue)

---

## 📚 Table of Contents

- [🚀 Quick Start](#-quick-start)
- [🛠️ Run Locally](#️-run-locally)
- [🧱 Build Binaries](#-build-binaries)
- [🐳 Run with Docker](#-run-with-docker-optional)
- [🧪 Running Tests](#-running-tests)
- [📁 Project Structure](#-project-structure)
- [🔑 Certificate Generation (TLS)](#-certificate-generation-for-httpstls)
- [📌 Requirements](#-requirements)
- [✍️ Author](#-author)
- [📝 License](#-license)

---


## 🚀 Quick Start

### 1. Clone this repo

```bash
git clone https://github.com/yourname/your-repo.git
cd your-repo
```

### 2. Install Go dependencies

```bash
go mod tidy
```

---

## 🛠️ Run Locally

### 👉 Run Server

```bash
make run-server
```

Runs `cmd/server/main.go`

### 👉 Run Worker

```bash
make run-worker
```

Runs `cmd/worker/main.go`

---

## 🧱 Build Binaries

Build static binaries into `./bin`:

```bash
make build-server
make build-worker
```

You can run them with:

```bash
./bin/server
./bin/worker
```

---

## 🧹 Clean Build Artifacts

```bash
make clean
```

---

## 🐳 Run with Docker (Optional)

If you use Docker, just run:

### ▶️ Run app (server):

```bash
docker-compose run --service-ports app

### ⚙️ Run worker:


docker-compose run --service-ports worker
---

## 📁 Project Structure

```
.
├── cmd/
│   ├── server/             # Main API / WebSocket Server
│   │   └── main.go
│   └── worker/             # Background Job Processor
│       └── main.go
├── internal/               # Business logic, services, core packages
├── docs/                   # Documentation / OpenAPI / Architecture
├── Makefile                # Dev helper commands
├── docker-compose.yml      # Optional Docker support
├── go.mod / go.sum         # Go modules
└── README.md               # You're here!
```

---

## 📌 Requirements

- Go 1.20+
- (Optional) Docker & Docker Compose

---

## 🧪 Running Tests

```bash
go test ./...
```

---

## ✍️ Author

Created by [MinhT933](https://github.com/MinhT933) — feel free to contribute or reach out!

---

## 📝 License

MIT License. See `LICENSE` file for details.


### 🔑 Certificate Generation (for HTTPS/TLS)

- **Dev:**  
  Tự động tạo certificate khi build image:
  ```bash
  docker build --build-arg GENERATE_CERT=true -t file-converter .
  ```

- **Prod:**  
  Không tạo certificate, bạn nên mount file cert/key từ ngoài vào container:
  ```bash
  docker build --build-arg GENERATE_CERT=false -t file-converter .
  ```