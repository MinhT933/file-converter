############################
# 1) Builder
############################
FROM golang:1.24-bullseye AS builder

WORKDIR /src

COPY go.mod go.sum ./
RUN go mod download

# Copy toàn bộ source
COPY . .

# Generate swagger ở build-time (chỉnh -g nếu file main khác đường dẫn)
RUN go install github.com/swaggo/swag/cmd/swag@v1.16.3
RUN swag init -g cmd/server/main.go -o ./docs

# Build binary (static)
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \
    go build -ldflags="-s -w" -o /app/myapp-server ./cmd/server

############################
# 2) Runtime (production)
############################
FROM debian:bullseye-slim AS runtime

RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates \
      wkhtmltopdf fontconfig fonts-dejavu \
      xvfb libxrender1 libxext6 libjpeg62-turbo openssl tini \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Chỉ copy những gì cần cho runtime
COPY --from=builder /app/myapp-server /usr/local/bin/myapp-server
COPY --from=builder /src/docs /app/docs

ENV GIN_MODE=release
EXPOSE 8080

ENTRYPOINT ["/usr/bin/tini","--"]
CMD ["/usr/local/bin/myapp-server"]
