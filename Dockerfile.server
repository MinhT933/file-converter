############################
# 1) Build binary
############################
FROM golang:1.24-bullseye AS builder

WORKDIR /src
COPY go.mod go.sum ./
RUN go mod download

COPY . .
RUN go build -o /usr/local/bin/myapp-server ./cmd/server

############################
# 2) Runtime (production-like)
############################
FROM debian:bullseye-slim AS server-runtime

# OS deps (wkhtmltopdf, fonts, X libs, tini để bắt tín hiệu PID1)
RUN apt-get update && apt-get install -y --no-install-recommends \
      ca-certificates wkhtmltopdf fontconfig fonts-dejavu \
      xvfb libxrender1 libxext6 libjpeg62-turbo openssl tini \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy binary từ builder
COPY --from=builder /usr/local/bin/myapp-server /usr/local/bin/myapp-server

# Nếu server phục vụ static swagger từ thư mục docs, copy luôn:
COPY --from=builder /src/docs /app/docs

# Entrypoint (không COPY .env; dùng env_file trong Compose)
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN sed -i 's/\r$//' /usr/local/bin/entrypoint.sh && chmod +x /usr/local/bin/entrypoint.sh

EXPOSE 8080
ENV GIN_MODE=release

# tini để xử lý tín hiệu đúng
ENTRYPOINT ["/usr/bin/tini","--","/usr/local/bin/entrypoint.sh"]